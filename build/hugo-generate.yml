parameters:
  initialize: true
  version: '0.59.1'
  theme: ''
  disqusshortname: ''
  canonifyurls: true
  binpath: '~/.local/bin'
  site: ''
  baseurl: ''
  stage: 'dev'
  testhtml: false
  artifact: artifact

stages:
- stage: Build_${{ parameters.artifact }}
  displayName: 'Build Artifact: ${{ parameters.artifact }}'
  jobs:
  - job: hugo_generate
    pool:
      vmImage: ubuntu-latest
    steps:
    - ${{ if eq(parameters.initialize, 'true') }}:
      - template: ../jobs/install-hugo.yml
        parameters:
          version: ${{ parameters.version }}
          binpath: '${{ parameters.binpath }}'
    - bash: |
        mkdir -p ${PUBLISHDIR}
        ${BINPATH}/hugo \
          --theme ${HUGO_THEME} \
          --configDir ./ \
          --gc \
          -e ${HUGO_ENV} \
          --contentDir "${CONTENTDIR}" \
          --config config.toml \
          --destination "${PUBLISHDIR}"
      displayName: 'Generate ${{ parameters.stage }} Site (${{ parameters.baseurl }})'
      env:
        SITE: ${{ parameters.baseurl }}
        HUGO_ENV: ${{ parameters.stage }}
        CONTENTDIR: 'sites/${{ parameters.site }}'
        PUBLISHDIR: 'public-${{ parameters.stage }}'
        BINPATH: '${{ parameters.binpath }}'
        HUGO_THEME: '${{ parameters.theme }}'
        HUGO_BASEURL: '${{ parameters.baseurl }}'
        HUGO_DISQUSSHORTNAME: '${{ parameters.disqusshortname }}'
        HUGO_CANONIFYURLS: '${{ parameters.canonifyurls }}'
    - task: CopyFiles@2
      displayName: 'Bundle Artifacts'
      inputs:
        Contents: |
          config.yml
          public-${{ parameters.stage }}/**
          resources/**
          static/**
          themes/**
        TargetFolder: ./deploy-${{ parameters.stage }}
    - task: ArchiveFiles@2
      displayName: 'Archive Artifacts'
      inputs:
        rootFolderOrFile: ./deploy-${{ parameters.stage }}
        includeRootFolder: false
        archiveType: tar
        tarCompression: gz
        archiveFile: $(Pipeline.Workspace)/hugo-${{ parameters.stage }}-artifact.tar.gz
        replaceExistingArchive: true
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(Pipeline.Workspace)/hugo-${{ parameters.stage }}-artifact.tar.gz
        artifactName: ${{ parameters.artifact }}
    - template: ../jobs/test-html.yml
      parameters:
        initialize: ${{ parameters.initialize }}
        binpath: '${{ parameters.binpath }}'
        path: ./deploy-${{ parameters.stage }}
