parameters:
  initialize: true
  version: '0.59.1'
  theme: ''
  disqusshortname: ''
  canonifyurls: false
  binpath: '~/.local/bin'
  site: ''
  baseurl: ''
  stage: 'dev'
  testhtml: false
  artifact: 'artifact'
  drafts: 'false'
  publishdir: 'docs'

stages:
- stage: Hugo_Site_${{ parameters.stage }}
  displayName: 'Build Site: ${{ parameters.artifact }}'
  jobs:
  - job: hugo_generate
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self
      clean: true
      submodules: true
      persistCredentials: true
    - ${{ if eq(parameters.initialize, 'true') }}:
      - template: ../jobs/install-hugo.yml
        parameters:
          version: ${{ parameters.version }}
          binpath: '${{ parameters.binpath }}'
    - ${{ if eq(parameters.drafts, 'true') }}:
      - bash: |
          mkdir -p ${ARTIFACTDIR}
          mkdir -p static
          echo "${SITE}" | awk -F/ '{print $3}'  > ./static/CNAME
          ${BINPATH}/hugo \
            --theme ${THEME} \
            --themesDir themes \
            --layoutDir ${LAYOUTDIR} \
            --configDir ./ \
            --gc \
            -e ${STAGE} \
            --contentDir "${CONTENTDIR}" \
            --config config.toml \
            --baseURL ${BASEURL} \
            --destination "${ARTIFACTDIR}" \
            --buildDrafts
        displayName: 'Generate ${{ parameters.stage }} Site (${{ parameters.baseurl }})'
        env:
          SITE: ${{ parameters.baseurl }}
          STAGE: ${{ parameters.stage }}
          CONTENTDIR: 'sites/${{ parameters.site }}'
          BINPATH: '${{ parameters.binpath }}'
          THEME: '${{ parameters.theme }}'
          BASEURL: '${{ parameters.baseurl }}'
          LAYOUTDIR: 'themes/${{ parameters.theme }}/layouts'
          HUGO_DISQUSSHORTNAME: '${{ parameters.disqusshortname }}'
          HUGO_CANONIFYURLS: '${{ parameters.canonifyurls }}'
          ARTIFACTDIR: '${{ parameters.artifact }}'
    - ${{ if eq(parameters.drafts, 'false') }}:
      - bash: |
          mkdir -p ${ARTIFACTDIR}
          mkdir -p static
          echo "${SITE}" | awk -F/ '{print $3}'  > ./static/CNAME
          ${BINPATH}/hugo \
            --theme ${THEME} \
            --themesDir themes \
            --layoutDir ${LAYOUTDIR} \
            --configDir ./ \
            --gc \
            -e ${STAGE} \
            --contentDir "${CONTENTDIR}" \
            --config config.toml \
            --baseURL ${BASEURL} \
            --destination "${ARTIFACTDIR}"
        displayName: 'Generate ${{ parameters.stage }} Site (${{ parameters.baseurl }})'
        env:
          SITE: ${{ parameters.baseurl }}
          STAGE: ${{ parameters.stage }}
          CONTENTDIR: 'sites/${{ parameters.site }}'
          BINPATH: '${{ parameters.binpath }}'
          THEME: '${{ parameters.theme }}'
          BASEURL: '${{ parameters.baseurl }}'
          LAYOUTDIR: 'themes/${{ parameters.theme }}/layouts'
          HUGO_DISQUSSHORTNAME: '${{ parameters.disqusshortname }}'
          HUGO_CANONIFYURLS: '${{ parameters.canonifyurls }}'
          ARTIFACTDIR: '${{ parameters.artifact }}'

    # - task: CopyFiles@2
    #   displayName: 'Bundle Artifacts'
    #   inputs:
    #     Contents: |
    #       ${{ parameters.artifact }}/**
    #     TargetFolder: ./deploy-${{ parameters.stage }}
    - task: ArchiveFiles@2
      displayName: 'Archive Artifacts'
      inputs:
        rootFolderOrFile: ./${{ parameters.artifact }}
        includeRootFolder: false
        archiveType: tar
        tarCompression: gz
        archiveFile: $(Pipeline.Workspace)/${{ parameters.artifact }}.tar.gz
        replaceExistingArchive: true
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(Pipeline.Workspace)/${{ parameters.artifact }}.tar.gz
        artifactName: ${{ parameters.artifact }}
    - ${{ if eq(parameters.testhtml, 'true') }}:
      - template: ../jobs/test-html.yml
        parameters:
          initialize: ${{ parameters.initialize }}
          binpath: '${{ parameters.binpath }}'
          path: ./deploy-${{ parameters.stage }}
