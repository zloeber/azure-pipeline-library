## Deploy an artifact bundle (tar.gz) from an azure pipeline to another git repo using inherited credentials.
## Author: Zachary Loeber
parameters:
  repo: ''
  branch: 'master'
  path: 'docs'
  stage: ''
  pipelineartifact: 'artifact'
  artifact: 'artifact.tar.gz'

stages:
- stage: Repo_Path_${{ parameters.stage }}
  displayName: 'Deploy: ${{ parameters.artifact }}'
  jobs:
  - deployment: deploy_${{ parameters.stage }}
    condition: succeeded()
    pool:
      vmImage: ubuntu-latest
    environment: ${{ parameters.stage }}
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            clean: true
            submodules: true
            persistCredentials: true
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: '${{ parameters.pipelineartifact }}'
              targetPath: $(Pipeline.Workspace)/_artifact
          - bash: |
              echo "Pulling in repo"
              gitorigin=`git config remote.origin.url`
              gitextraheader=`git config "http.${gitorigin}.extraheader"`
              rm -rf _deploy
              echo "Cloning ${REPO}"
              git clone -c http.extraheader="${gitextraheader}" --depth 1 --branch ${BRANCH} ${REPO} _deploy
              echo "Removing ${REPOPATH} contents and overwriting with artifact contents"
              rm -rf ./_deploy/${REPOPATH}/*
              mkdir -p ./_deploy/${REPOPATH}
              tar -xzvf ${ARTIFACTPATH}/${ARTIFACT} --directory ./_deploy/${REPOPATH}
              cd ./_deploy
              git config user.email "cicd@azurepipelines"
              git config user.name "cicd"
              git add --all .
              git commit --no-verify -m 'cicd: Automated Deployment'
              git -c http.extraheader="${gitextraheader}" push
            displayName: 'Github Pages Deployment'
            env:
              STAGE: ${{ parameters.stage }}
              REPO: ${{ parameters.repo }}
              BRANCH: ${{ parameters.branch }}
              REPOPATH: ${{ parameters.path }}
              ARTIFACTPATH: $(Pipeline.Workspace)/_artifact
              ARTIFACT: ${{ parameters.artifact }}
