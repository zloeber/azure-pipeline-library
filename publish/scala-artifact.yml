## Publish via scala jar to maven artifactory
parameters:
  org: ''
  feedname: ''

stages:
- stage: Publish_Scala_Artifact
  displayName: 'Publish Artifacts'
  jobs:
  - job: publish_scala_artifact
    condition: succeeded()
    pool:
      vmPublish: ubuntu-latest
    variables:
    - group: artifactory
    steps:
    - checkout: self
      clean: true

    - task: MavenAuthenticate@0
      displayName: 'CI: Auth Artifact Feeds - ${{ parameters.feedname }}'
      inputs:
        artifactsFeeds: '${{ parameters.feedname }}'

    - bash: |
        if [ -e "./sbt" ]; then
          echo 'sbt already exists, skipping' >&2
        else
          curl -o ./sbt -Ls https://git.io/sbt
        fi
        chmod +x ./sbt
        #COMMITHASH=`git rev-parse --short HEAD`
        #echo "COMMITHASH: ${COMMITHASH}"
        #echo "##vso[task.setvariable variable=COMMITHASH]${COMMITHASH}"

        SCALA_VERSION="$(./sbt -no-colors scalaVersion | tail -1)"
        SCALA_VERSION="${SCALA_VERSION#* }"
        SCALA_VERSION=${SCALA_VERSION%.*}
        echo "SCALA_VERSION: ${SCALA_VERSION}"
        echo "##vso[task.setvariable variable=SCALA_VERSION]${SCALA_VERSION}"
        VERSION="$(./sbt -no-colors version | tail -1)"
        VERSION="${PROJECT_VERSION#* }"
        echo "VERSION: ${VERSION}"
        echo "##vso[task.setvariable variable=VERSION]${VERSION}"
      displayName: 'Publish: Initialize'
      continueOnError: false

    - bash: |
        echo "Publishing version: ${RELEASE_VERSION}"
        ./sbt -no-colors \
          "set test in assembly := {}" \
          "set coverageEnabled := false" \
          clean assembly publish
      displayName: 'Publish: Artifact Assembly'
      env:
        ARTIFACTORY_USER_NAME: 'AzureDevOps'
        ARTIFACTORY_USER_PASSWORD: $(artifactory-password)